@page "/counter"
@using System.Web;
@using System.Text.Json;
@inject HttpClient Http

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

<Select DataSource="@_items"
		@bind-Value="@_selectedValue"
		EnableSearch
        Style="width: 200px;"
		ValueName="@nameof(Item.Value)"
		LabelName="@nameof(Item.Label)"
		TItemValue="string"
		TItem="Item"
        Placeholder="input search text"
        ShowArrowIcon="false"
		HideNotFoundContent="true"
        OnSearch="@(async (value) => await OnSearch(value))"
		OnSelectedItemChanged="OnSelectedItemChangedHandler"
        SearchDebounceMilliseconds="500"
        IsVirtualized
        AllowClear
        EnableValueSettingByEnterBtn>
</Select>

@code
{

    class Item
	{
		public string Value { get; set; }
		public string Label { get; set; }
	}
	
    Task<List<Item>> _oldTask;
    List<Item> _items = new List<Item>();
	string _selectedValue;
	
    private async Task OnSearch(string value)
    {
        if (!string.IsNullOrWhiteSpace(value))
        {
            if (_oldTask == null || _oldTask.IsCompleted)
            {
                _oldTask = Task.Run<List<Item>>(() => source.Where(i => i.Label.Contains(value.Trim())).ToList());
                _items = await _oldTask;
                StateHasChanged();
            }
        }
		else
		{
			if (_items.Any())
				_items.Clear();
		}
    }

    List<Item> source = new List<Item>
    {
        new Item { Value = "1" , Label = "Lab1"},
        new Item { Value = "11" , Label = "Lab11"},
        new Item { Value = "2" , Label = "Lab2"},
        new Item { Value = "3" , Label = "Lab3"},
        new Item { Value = "4" , Label = "Lab4"},
        new Item { Value = "5" , Label = "Lab5"},
        new Item { Value = "6" , Label = "Lab6"},
        new Item { Value = "7" , Label = "Lab7"},
        new Item { Value = "8" , Label = "Lab8"},
        new Item { Value = "11" , Label = "Lab11"},
        new Item { Value = "121" , Label = "aLab11"},
        new Item { Value = "113" , Label = "aaLab11"},
        new Item { Value = "111" , Label = "Lab111"},
    };

    private void OnSelectedItemChangedHandler(Item value)
    {
        Console.WriteLine($"selected: ${value?.Label}");
    }

    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }
}
