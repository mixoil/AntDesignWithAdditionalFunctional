@namespace AntDesign.Select.Internal
@using Microsoft.AspNetCore.Components.Web.Virtualization
@inherits AntDomComponentBase
@typeparam TItemValue
@typeparam TItem

@{
    RenderFragment<SelectOptionItem<TItemValue, TItem>> selectOptionFragment = (model) => 
        @<SelectOption
            @key="@model.InternalId"
            TItemValue="TItemValue"
            TItem="TItem">
        </SelectOption>;
}

@if(IsVirtualized)
{
    <Virtualize Items="@SelectParent.SortedSelectOptionItems.ToList()" Context="selectOption" TItem="SelectOptionItem<TItemValue, TItem>" OverscanCount="7">
        if (_oldGroupName == selectOption.GroupName)
        {
            <CascadingValue Value="@selectOption.InternalId" Name="InternalId">
                @selectOptionFragment(selectOption)
            </CascadingValue>
        }
        else
        {
            <div class="@ClassMapper.Class">@selectOption.GroupName</div>
            <CascadingValue Value="@selectOption.InternalId" Name="InternalId">
                @selectOptionFragment(selectOption)
            </CascadingValue>
        
            _oldGroupName = selectOption.GroupName;
        }   
    </Virtualize>
}
else
{
   @foreach (var selectOption in SelectParent.SortedSelectOptionItems)
    {
        if (_oldGroupName == selectOption.GroupName)
        {
            <CascadingValue Value="@selectOption.InternalId" Name="InternalId">
                @selectOptionFragment(selectOption)
            </CascadingValue>
        }
        else
        {
            <div class="@ClassMapper.Class">@selectOption.GroupName</div>
            <CascadingValue Value="@selectOption.InternalId" Name="InternalId">
                @selectOptionFragment(selectOption)
            </CascadingValue>
        
            _oldGroupName = selectOption.GroupName;
        }   
    } 
}


@code {
    /// <summary>
    /// Whether select search result is virtualized.
    /// </summary>
    [Parameter]
    public bool IsVirtualized { get; set; }
}